{"version":3,"file":"1.d3bc2a1679650b32faa6.hot-update.js","sources":["webpack:///lib/with-redux-store.js","webpack:///store.js"],"sourcesContent":["import React from 'react'\nimport {initializeStore} from '../store'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState)\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState)\n  }\n  return window[__NEXT_REDUX_STORE__]\n}\n\nexport default (App) => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps (appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore()\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore\n\n      let appProps = {}\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps.call(App, appContext)\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState()\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/with-redux-store.js","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst initialState = {\n  context: null,\n  players: []\n};\n\nexport const SET_CONTEXT = \"SET_CONTEXT\";\nexport const CREATE_PLAYERS = \"CREATE_PLAYERS\";\n\n// REDUCERS\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CONTEXT:\n      return Object.assign({}, state, {\n        context: action.context\n      });\n    case CREATE_PLAYERS:\n      return Object.assign({}, state, {\n        players: action.players\n      });\n    default:\n      return state;\n  }\n};\n\n// ACTIONS\n\nexport function setContext(context) {\n  return { type: SET_CONTEXT, context };\n}\nexport function createPlayers(players) {\n  return { type: CREATE_PLAYERS, players };\n}\n\nexport function initializeStore(initialState = initialState) {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// store.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAgBA;AAhBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAxBA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3BA;AACA;AADA;AAAA;AAAA;AA6BA;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAVA;AAYA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}